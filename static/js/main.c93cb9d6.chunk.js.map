{"version":3,"sources":["UI/header.js","pages/Episodes/components/EpisodeCard.js","UI/Pagination.js","UI/Search.js","pages/Episodes/Episodes.js","pages/Locations/components/LocationCard.js","pages/Locations/components/FilterType.js","pages/Locations/components/FilterDimension.js","pages/Locations/Location.js","pages/WatchList/WatchList.js","pages/Characters/components/CardDetails.js","pages/Characters/components/filters/filterBTN.js","pages/Characters/components/filters/category/Species.js","pages/Characters/components/filters/category/Status.js","pages/Characters/components/filters/category/Gender.js","pages/Characters/components/filters/filters.js","pages/Characters/components/cards.js","pages/Characters/Characters.js","App.js","reportWebVitals.js","index.js"],"names":["pages","Header","React","anchorElNav","setAnchorElNav","handleCloseNavMenu","AppBar","sx","position","Container","maxWidth","Toolbar","disableGutters","Typography","component","Link","to","variant","noWrap","color","mr","display","xs","md","Box","flexGrow","IconButton","size","onClick","event","currentTarget","Menu","id","anchorEl","anchorOrigin","vertical","horizontal","keepMounted","transformOrigin","open","Boolean","onClose","MenuItem","textAlign","map","page","justifyContent","Button","NavLink","my","index","EpisodeCard","results","x","name","air_date","Grid","item","Card","mb","height","CardContent","fontSize","gutterBottom","MyPagination","setPageNumber","info","Stack","spacing","alignItems","Pagination","count","onChange","_","num","showFirstButton","showLastButton","Search","setSearch","verticalAlign","background","alpha","borderRadius","px","width","alignSelf","marginBottom","TextField","margin","e","search","target","value","label","Episodes","useState","pageNumber","fetchedData","updateFetchedData","api","useEffect","a","fetch","then","res","json","data","container","mt","LocationCard","type","dimension","FilterType","updateType","updateDimension","ml","FormControl","fullWidth","InputLabel","Select","labelId","FilterDimension","Location","classes","makeStyles","theme","clearButton","cursor","useStyles","window","location","reload","className","flexDirection","WatchList","setItem","JSON","parse","localStorage","getItem","items","setItems","stringify","Paper","elevation","p","fontWeight","trim","newItem","v4","checked","console","log","alert","Checkbox","filter","CardDetails","history","useNavigate","useParams","image","origin","gender","species","status","minheight","CardMedia","alt","FilterBTN","input","task","jsx","Species","updateSpecies","Status","updateStatus","Gender","updateGender","Filters","Cards","CardActions","Characters","pr","App","exact","path","element","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c93cb9d6.chunk.js","sourcesContent":["import * as React from 'react';\r\nimport {AppBar, Box, Toolbar, IconButton, Typography, Menu, Container, Button, MenuItem} from '@mui/material';\r\nimport MenuIcon from '@mui/icons-material/Menu';\r\nimport {NavLink,Link} from 'react-router-dom'\r\n\r\n\r\n\r\n\r\n\r\nconst pages = [ 'Episodes', 'Locations'];\r\n\r\nconst Header = () => {\r\n\r\n  const [anchorElNav, setAnchorElNav] = React.useState(null);\r\n\r\n  const handleOpenNavMenu = (event) => {\r\n    setAnchorElNav(event.currentTarget);\r\n  };\r\n\r\n\r\n  const handleCloseNavMenu = () => {\r\n    setAnchorElNav(null);\r\n  };\r\n\r\n\r\n\r\n\r\n  return (\r\n    <AppBar sx={{position: \"float\"}}>\r\n      <Container maxWidth=\"xl\">\r\n        <Toolbar disableGutters>\r\n          <Typography\r\n          component={Link} to = {'/home'}\r\n            variant=\"h5\"\r\n            noWrap\r\n            //sx={{ mr: 2, display: { xs: 'none', md: 'flex' }, color: '#FFFFFF',  }}\r\n\r\n            sx={[\r\n              {\r\n                '&:hover': {\r\n                  color: 'white',\r\n                },\r\n                \r\n              },\r\n              { mr: 2, display: { xs: 'none', md: 'flex' }, color: '#FFFFFF'},\r\n             \r\n            ]}\r\n          >\r\n            Rick & Morty \r\n          </Typography>\r\n\r\n          <Box sx={{ flexGrow: 1, display: { xs: 'flex', md: 'none' } }}>\r\n            <IconButton\r\n              size=\"large\"\r\n              aria-label=\"account of current user\"\r\n              aria-controls=\"menu-appbar\"\r\n              aria-haspopup=\"true\"\r\n              onClick={handleOpenNavMenu}\r\n              color=\"inherit\"\r\n            >\r\n              <MenuIcon />\r\n            </IconButton>\r\n            <Menu\r\n              id=\"menu-appbar\"\r\n              anchorEl={anchorElNav}\r\n              anchorOrigin={{\r\n                vertical: 'bottom',\r\n                horizontal: 'left',\r\n              }}\r\n              keepMounted\r\n              transformOrigin={{\r\n                vertical: 'top',\r\n                horizontal: 'left',\r\n              }}\r\n              open={Boolean(anchorElNav)}\r\n              onClose={handleCloseNavMenu}\r\n              sx={{\r\n                display: { xs: 'block', md: 'none' },\r\n              }}\r\n            >\r\n              <Box >\r\n              <MenuItem key=\"Characters\" component={Link} to=\"/home\" onClick={handleCloseNavMenu}>\r\n                  <Typography textAlign=\"center\">Characters</Typography>\r\n                </MenuItem>\r\n              {pages.map((page) => (\r\n                <MenuItem key={page} component={Link} to={`/${page}`} onClick={handleCloseNavMenu}>\r\n                  <Typography textAlign=\"center\">{page}</Typography>\r\n                </MenuItem>\r\n              ))}\r\n              <MenuItem key=\"My watch list\" component={Link} to={\"/watch-list\"} onClick={handleCloseNavMenu}>\r\n                  <Typography textAlign=\"center\">My watch list</Typography>\r\n                </MenuItem>\r\n                </Box>\r\n            </Menu>\r\n            \r\n          </Box>\r\n          <Typography\r\n            variant=\"h6\"\r\n            noWrap\r\n            component=\"div\"\r\n            sx={{ flexGrow: 1, display: { xs: 'flex', md: 'none' } }}\r\n          >\r\n            Rick and Morty\r\n          </Typography>\r\n          <Box    \r\n          sx={{ flexGrow: 1, justifyContent:'flex-end', display: { xs: 'none', md: 'flex' } }}>\r\n          <Button component={NavLink}           \r\n                key=\"characters\" to={\"/home\"} \r\n                sx={{ my: 2, color: 'white', display: 'block' }}\r\n              >\r\n                Characters\r\n              </Button>\r\n            {pages.map((page, pages, index) => (\r\n              <Button component={NavLink}\r\n                key={pages} to={`/${page}`} \r\n                \r\n                sx={{ my: 2, color: 'white', display: 'block' }}\r\n              >\r\n                {page}\r\n              </Button>\r\n              \r\n            ))}\r\n            <Button component={NavLink}\r\n                key=\"My watch list\" to={\"/watch-list\"} \r\n                \r\n                sx={{ my: 2, color: 'white', display: 'block' }}\r\n              >\r\n                My watch list\r\n              </Button>\r\n          </Box>\r\n        </Toolbar>\r\n      </Container>\r\n    </AppBar>\r\n  );\r\n};\r\nexport default Header;\r\n","import React from 'react'\r\nimport {Grid, Card, CardContent, Typography} from '@mui/material';\r\n\r\n\r\n\r\n\r\n\r\nfunction EpisodeCard({results,page}) {\r\n    let display;\r\n    \r\n\r\n    if (results) {\r\n        display = (results).map(x=>{\r\n            let {id, name, air_date } = x\r\n            return(<Grid key={id} item md={3}>\r\n                <Card sx={{ maxWidth: '300px', mb: '10px', height:'160px' }}>\r\n                    <CardContent>\r\n                        <Typography sx={{ fontSize: 14 }} color=\"text.secondary\" gutterBottom>\r\n                        Episode {id}\r\n                        </Typography>\r\n                        <Typography variant=\"h5\" component=\"div\">\r\n                            {name}\r\n                        </Typography>\r\n                        <Typography variant=\"body2\">\r\n                        Air date: {air_date}\r\n                        </Typography>\r\n                    </CardContent>\r\n                   \r\n                    </Card>\r\n                </Grid>\r\n                ) \r\n    })\r\n}\r\nelse {\r\n    display = \"No Characters Found :(\";\r\n}\r\n    return (\r\n        <>{display}</>\r\n    )\r\n}\r\n\r\nexport default EpisodeCard\r\n","import React from 'react'\r\nimport {Pagination, Stack} from '@mui/material';\r\n\r\nfunction MyPagination({setPageNumber, info}) {\r\n    let { pages } = info || {};\r\n\r\n    return (\r\n        <Stack spacing={2} justifyContent=\"center\"\r\n           alignItems=\"center\" >\r\n           <Pagination count={pages} onChange={(_, num) => setPageNumber(num)} variant=\"outlined\" color=\"primary\" showFirstButton showLastButton />\r\n         </Stack>\r\n    )\r\n}\r\n\r\nexport default MyPagination\r\n","import { TextField, Typography } from '@mui/material'\r\nimport { Box, alpha } from '@mui/system'\r\nimport SearchIcon from '@mui/icons-material/Search';\r\n\r\n\r\nimport React from 'react'\r\n\r\n\r\nfunction Search({setSearch}) {\r\n    const onChangeHandler = (search) => {\r\n    \r\n  \r\n        setSearch(search)\r\n      }\r\n    return (\r\n        <>\r\n            <Typography\r\n          variant=\"h6\"\r\n          sx={{verticalAlign:'center', mr:'5px'}} >\r\n            Search:\r\n            </Typography>\r\n        <Box sx={{display: 'flex',\r\n        justifyContent: 'center',\r\n      background: alpha('#1976D2', 0.2),\r\n      borderRadius: '5px',\r\n      px: '20px',\r\n      my: '5px',\r\n      width: '300px'\r\n     }}>\r\n              <SearchIcon sx={{alignSelf: 'flex-end',\r\n      marginBottom: '5px',}} />\r\n             <TextField \r\n             sx={{\r\n             margin: '5px',}}\r\n              \r\n              onChange={e=>{\r\n              onChangeHandler(e.target.value)\r\n              }} \r\n              id=\"standard-basic\" label=\"Search by name\" variant=\"standard\" />\r\n        </Box>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Search\r\n","import React, {useState, useEffect} from 'react'\r\nimport EpisodeCard from './components/EpisodeCard';\r\nimport Grid from '@mui/material/Grid';\r\nimport MyPagination from '../../UI/Pagination'\r\nimport Search from '../../UI/Search';\r\n\r\n\r\nconst Episodes = () => {\r\n    let [pageNumber, setPageNumber] = useState(1);\r\n    let [search, setSearch] = useState(\"\");\r\n    let [fetchedData, updateFetchedData] = useState([]);\r\n    let api=`https://rickandmortyapi.com/api/episode/?page=${pageNumber}&name=${search}`\r\n  let {info, results} = fetchedData;\r\n\r\n\r\n    useEffect(() =>{\r\n    (async function(){\r\n        let data = await fetch(api).then(res=> res.json());\r\n        updateFetchedData(data)\r\n    })()\r\n    \r\n\r\n    },[api])\r\n    return (\r\n        <Grid container spacing={2} justifyContent=\"center\" sx={{mt:'60px'}} >\r\n            <Grid item md={12} sx={{display:'flex', justifyContent:'center', alignItems:'center'}}>\r\n                <Search setSearch={setSearch} />\r\n            </Grid>\r\n            <Grid container item md={11}>\r\n                <EpisodeCard page=\"/episodes/\" results={results} />\r\n            </Grid>\r\n            <Grid item md={12}>\r\n          <MyPagination info={info} setPageNumber={setPageNumber} />\r\n        </Grid>\r\n\r\n        </Grid>\r\n    \r\n    )\r\n}\r\n\r\nexport default Episodes\r\n","import React from 'react'\r\nimport {Grid, Card, CardContent, Typography} from '@mui/material';\r\n\r\n\r\nfunction LocationCard({results}) {\r\n    let display;\r\n\r\n    if (results) {\r\n        display = (results).map(x=>{\r\n            let {id, name, type, dimension } = x\r\n            return(<Grid key={id} item md={3}>\r\n                <Card sx={{ maxWidth: '250px', mb: '10px', height:'200px' }}>\r\n                    <CardContent>\r\n                        <Typography sx={{ fontSize: 14 }} color=\"text.secondary\" gutterBottom>\r\n                        Location {id}\r\n                        </Typography>\r\n                        <Typography variant=\"h5\" component=\"div\">\r\n                            {name}\r\n                        </Typography>\r\n                        <Typography variant=\"body1\">\r\n                        Type: {type}\r\n                        </Typography>\r\n                        <Typography variant=\"body2\">\r\n                        Dimension: {dimension}\r\n                        </Typography>\r\n                    </CardContent>\r\n                    </Card>\r\n                </Grid>\r\n                ) \r\n    })\r\n}\r\nelse {\r\n    display = \"No Characters Found :(\";\r\n}\r\n    return (\r\n        <>{display}</>\r\n    )\r\n}\r\n\r\nexport default LocationCard\r\n","import { FormControl, InputLabel, MenuItem, Select, Box} from '@mui/material'\r\nimport React from 'react'\r\n\r\nfunction FilterType({updateType, setPageNumber, type, updateDimension}) {\r\n\r\n    let typeArray = [\"Planet\", \"Cluster\", \"Space station\", \"Microverse\", \"TV\", \"Resort\", \"Fantasy town\", \"Dream\", \"Customs\", \"Game\", \"Menagerie\", \"Dimension\", \"unknown\", \"Consciousness\", \"Country\", \"Hell\", \"Police Department\", \"Space\", \"Human\", \"Elemental Rings\", \"Base\", \"Liquid\", \"Spacecraft\", \"Death Star\", \"Reality\", \"Acid Plant\", \"Asteroid\", \"Diegesis\", \"Woods\", \"Mount\", \"Quasar\", \"Quadrant\",\"Teenyverse\", \"Miniverse\"];\r\n\r\n    const handleChange = (event) => {\r\n        updateType(event.target.value);\r\n        updateDimension(\"\");\r\n      setPageNumber(1);    }\r\n      ;\r\n    return (\r\n      <Box sx={{mt: '10px', maxWidth: '90%', ml: '10px' }}>\r\n        <FormControl fullWidth>\r\n        <InputLabel id=\"demo-simple-select-label\">Choose type</InputLabel>\r\n        <Select\r\n          labelId=\"demo-simple-select-label\"\r\n          id=\"demo-simple-select\"\r\n          value={type}\r\n          label=\"Choose type\"\r\n          onChange={handleChange}\r\n        >\r\n        \r\n        {typeArray.map((item, index) => (\r\n    <MenuItem value={item} key={index}>{item}</MenuItem>\r\n  ))}\r\n  </Select>\r\n      </FormControl>\r\n      </Box>\r\n    )\r\n}\r\n\r\nexport default FilterType\r\n","import { FormControl, InputLabel, MenuItem, Select, Box} from '@mui/material'\r\nimport React from 'react'\r\n\r\nfunction FilterDimension({updateDimension, setPageNumber, dimension, updateType}) {\r\n\r\n    let dimensionArray = [\"Dimension C-137\", \"Replacement Dimension\", \"Cronenberg Dimension\", \"unknown\", \"Fantasy Dimension\", \"Dimension 5-126\", \"Cromulon Dimension\", \"Dimension C-500A\"];\r\n\r\n    const handleChange = (event) => {\r\n        updateDimension(event.target.value);\r\n        updateType(\"\");\r\n      setPageNumber(1);    }\r\n      ;\r\n    return (\r\n        <Box sx={{mt: '10px', maxWidth: '90%', ml: '10px' }}>\r\n        <FormControl fullWidth>\r\n        <InputLabel id=\"demo-simple-select-label\">Choose dimension</InputLabel>\r\n        <Select\r\n          labelId=\"demo-simple-select-label\"\r\n          id=\"demo-simple-select\"\r\n          value={dimension}\r\n          label=\"Choose dimension\"\r\n          onChange={handleChange}\r\n        >\r\n        \r\n        {dimensionArray.map((item, index) => (\r\n    <MenuItem value={item} key={index}>{item}</MenuItem>\r\n  ))}\r\n  </Select>\r\n      </FormControl>\r\n      </Box>\r\n    )\r\n}\r\n\r\nexport default FilterDimension\r\n","import React, {useState, useEffect} from 'react'\r\nimport LocationCard from './components/LocationCard';\r\nimport Grid from '@mui/material/Grid';\r\nimport MyPagination from '../../UI/Pagination'\r\nimport Search from '../../UI/Search';\r\nimport FilterType from './components/FilterType';\r\nimport { Box } from '@mui/system';\r\nimport {makeStyles} from '@mui/styles';\r\nimport {  Link, Typography } from '@mui/material'\r\nimport FilterDimension from './components/FilterDimension';\r\n\r\n\r\n\r\n\r\nconst Location = () => {\r\n    let [pageNumber, setPageNumber] = useState(1);\r\n    let [search, setSearch] = useState(\"\");\r\n    let [type, updateType] = useState(\"\");\r\n    let [dimension, updateDimension] = useState(\"\");\r\n    let [fetchedData, updateFetchedData] = useState([]);\r\n    let api=`https://rickandmortyapi.com/api/location/?page=${pageNumber}&name=${search}&type=${type}&dimension=${dimension}`\r\n  let {info, results} = fetchedData;\r\n\r\n  let clear = () => {\r\n    updateType(\"\");\r\n    updateDimension(\"\");\r\n    setPageNumber(1);\r\n    window.location.reload(false);\r\n  };\r\n\r\n  const useStyles = makeStyles(theme => ({\r\n    clearButton: {\r\n        cursor: 'pointer',\r\n    }\r\n  }));\r\nconst classes = useStyles();\r\n\r\n\r\n    useEffect(() =>{\r\n    (async function(){\r\n        let data = await fetch(api).then(res=> res.json());\r\n        updateFetchedData(data)\r\n    })()\r\n    \r\n\r\n    },[api])\r\n\r\n    return (\r\n        <Grid container spacing={2} justifyContent=\"center\" sx={{mt:'60px'}} >\r\n            <Grid item md={12} sx={{display:'flex', justifyContent:'center', alignItems:'center'}}>\r\n                <Search setSearch={setSearch} />\r\n            </Grid>\r\n            <Grid item md={3} >\r\n                <Box>\r\n                    <Typography sx={{textAlign:'center'}} variant=\"h6\">\r\n                    Filters\r\n                    </Typography>\r\n                    <Link sx={{ml: '140px'}}  onClick={clear} className={classes.clearButton}>Clear filters </Link>\r\n                    <FilterType  sx={{ display: 'flex', flexDirection: 'column'}} \r\n                    updateType={updateType}\r\n                    type={type}\r\n                    setPageNumber={setPageNumber}\r\n                    updateDimension={updateDimension}\r\n                    />\r\n                    <FilterDimension  sx={{  display: 'flex', flexDirection: 'column'}} \r\n                    dimension={dimension}\r\n                    updateDimension={updateDimension}\r\n                    setPageNumber={setPageNumber}\r\n                    updateType={updateType}\r\n                    />\r\n                </Box>\r\n        \r\n        </Grid>\r\n            <Grid container item md={9}>\r\n                <LocationCard results={results} />\r\n            </Grid>\r\n            <Grid item md={12}>\r\n          <MyPagination info={info} setPageNumber={setPageNumber} />\r\n        </Grid>\r\n\r\n        </Grid>\r\n    \r\n    )\r\n}\r\n\r\nexport default Location\r\n","import { Grid, Typography, TextField, FormControl, Button, Checkbox, Card, Paper } from '@mui/material'\r\nimport { Box, alpha  } from '@mui/system'\r\nimport React, {useState, useEffect} from 'react'\r\nimport {v4} from 'uuid'\r\n\r\nfunction WatchList() {\r\n    const [item,setItem] = useState('')\r\n    const [items,setItems] = useState (\r\n        JSON.parse(localStorage.getItem('items')) || []\r\n    )\r\n\r\n    useEffect(() => {\r\n        localStorage.setItem('items', JSON.stringify(items))\r\n    },[items])\r\n\r\n    const newItem = () => {\r\n        if (item.trim() !=='') {\r\n            const newItem = {\r\n                id: v4(),\r\n                item: item,\r\n                checked: false,\r\n\r\n            }\r\n            setItems((items) => [...items, newItem]);\r\n            setItem('');\r\n            console.log(items.id)\r\n\r\n        }\r\n\r\n            else {\r\n                alert('Please add the episode')\r\n            }\r\n        }\r\n\r\n    const deleteNode = (id) => {\r\n        setItems(items.filter((item) => item.id !==id))\r\n        \r\n    }\r\n    const completeNode = (id) => {\r\n        setItems(items.map((item) => {\r\n            if(item.id === id) {\r\n                return{...item,checked: !item.checked}\r\n            }\r\n            return item;\r\n        }))\r\n    }\r\n    \r\n\r\n\r\n    return (\r\n        <Grid container spacing={2} justifyContent=\"center\"sx={{mt:'60px'}}>\r\n            <Grid item md={4} sx={{display:'flex', justifyContent:'center', alignItems:'center'}}>\r\n            <FormControl fullWidth>\r\n            <Paper elevation={3} \r\n             sx={{background: alpha('#D3D3D3', 0.2), display:'flex', justifyContent:'center', alignItems:'center', flexDirection: 'column', borderRadius: '10px', p:'10px' }} >\r\n                        <Typography sx={{fontSize: 24, fontWeight: 'bold', mb:'10px'}}>\r\n                            My watchlist\r\n                        </Typography>\r\n                        <Box sx={{display:'flex', justifyContent: 'center', alignItems:'center', width:'90%',}}>\r\n                        <TextField id=\"outlined-basic\" label=\"Enter episode to watch\" variant=\"outlined\"\r\n                         value={item}\r\n                        onChange={(event) => setItem(event.target.value)}\r\n                        />\r\n                        <Button variant=\"outlined\"\r\n                        onClick={newItem}\r\n                        sx={{ml:'10px'}}\r\n\r\n                        >Add</Button>\r\n\r\n\r\n                        </Box>\r\n                        {\r\n                            items.map((item, index) => {\r\n                                return (\r\n                                    <Card key={index} sx={{display:'flex', justifyContent: 'space-between', alignItems:'center', width:'90%', p:'5px', my:'5px'}}>\r\n                                        <Checkbox\r\n                                        checked={item.checked}\r\n                                          onClick={() => completeNode(item.id)}\r\n                                            />\r\n                                    <Typography>\r\n                                        {`${item.item}`}\r\n                                    </Typography>\r\n                                    <Button \r\n                                    sx={{color:'#FF0000'}} \r\n                                    onClick={() => deleteNode(item.id)\r\n                                    }\r\n                                    >X</Button>\r\n                                    </Card>\r\n                                )\r\n                            })\r\n                        }\r\n\r\n                    </Paper>\r\n            </FormControl>\r\n            </Grid>\r\n            \r\n\r\n        </Grid>\r\n       \r\n       \r\n    )\r\n}\r\n\r\nexport default WatchList\r\n","import { Button, Grid, Card, CardContent, CardMedia, Typography } from '@mui/material';\r\nimport React, {useEffect,useState} from 'react'\r\nimport {useParams, useNavigate} from \"react-router-dom\"\r\n\r\nconst CardDetails = () => {\r\n    let history = useNavigate();\r\n    let {id} = useParams();\r\n    let [fetchedData, updateFetchedData] = useState([]);\r\n    let {name, image, origin, location, gender, species, status} = fetchedData;\r\n\r\n\r\n    let api = `https://rickandmortyapi.com/api/character/${id}`\r\n    useEffect (()=>{\r\n  \r\n        (async function(){\r\n        let data = await fetch(api).then(res => res.json())\r\n        updateFetchedData(data) \r\n      })()\r\n    \r\n    \r\n      },[api]);\r\n    return (\r\n        <Grid container\r\n        spacing={2}\r\n        sx={{mt:'100px'}}>\r\n            <Grid item md={1}>\r\n            \r\n            <Button sx={{ml:'20px', mb:'10px'}} variant=\"contained\" onClick={() => history('/home')}>\r\n                Go back\r\n            </Button>\r\n            </Grid>\r\n            <Grid item xs={12} md={11}  sx={{display:\"flex\", justifyContent:\"center\",\r\n  alignItems:\"center\"}} >\r\n            <Card  sx={{ maxWidth: 350, minheight: '550px' }}>\r\n                            <CardMedia\r\n                            component=\"img\"\r\n                            height=\"350\"\r\n                            image={image}\r\n                            alt={name}\r\n                            > \r\n                            </CardMedia>\r\n                            <CardContent>\r\n                            <Typography gutterBottom variant=\"h5\" component=\"div\">\r\n                                {name}\r\n                            </Typography>\r\n                            <Typography variant=\"h6\" color=\"text.primary\">\r\n                                Status: {status}\r\n                            </Typography>\r\n                            <Typography variant=\"body1\" color=\"text.primary\">\r\n                                Gender: {gender}\r\n                            </Typography>\r\n                            <Typography variant=\"body1\" color=\"text.primary\">\r\n                                Location: {location?.name}\r\n                            </Typography>\r\n                            <Typography variant=\"body1\" color=\"text.primary\">\r\n                                Origin: {origin?.name}\r\n                            </Typography>\r\n                            <Typography variant=\"body2\" color=\"text.primary\">\r\n                                Species: {species}\r\n                            </Typography>\r\n                            </CardContent>\r\n                    </Card>   \r\n                    </Grid>\r\n         </Grid>\r\n        \r\n    )\r\n}\r\n\r\nexport default CardDetails\r\n","import React from 'react';\r\n\r\n\r\nconst FilterBTN = ({ input, task, setPageNumber, index, name }) => {\r\n    return (\r\n    <div>\r\n      <style jsx>\r\n        {`\r\n          .x:checked + label {\r\n            background-color: #0b5ed7;\r\n            color: white }\r\n          input[type=\"radio\"] { display: none; }\r\n        `}\r\n      </style>\r\n      <div className=\"form-check\">\r\n  <input\r\n    className=\"form-check-input x\" type=\"radio\"\r\n    name={name} id={`${name}-${index}`}\r\n  />\r\n  <label\r\n    onClick={(x) => {\r\n      task(input); setPageNumber(1);\r\n    }}\r\n    className=\"btn btn-outline-primary\"\r\n  > {input} </label>\r\n</div>\r\n    </div>\r\n    );\r\n    };\r\n\r\nexport default FilterBTN\r\n","import React from 'react';\r\nimport FilterBTN from '../filterBTN';\r\n\r\n\r\n\r\nconst Species = ({ updateSpecies, setPageNumber }) => {\r\n    let species = [\r\n        \"Human\", \"Alien\", \"Humanoid\",\r\n        \"Poopybutthole\", \"Mythological\", \"Unknown\",\r\n        \"Animal\", \"Disease\",\"Robot\",\"Cronenberg\",\"Planet\"\r\n      ];\r\n        return (\r\n    <div className=\"accordion-item\">\r\n      <h2 className=\"accordion-header\" id=\"headingOne\">\r\n        <button\r\n          className=\"accordion-button collapsed\" type=\"button\"\r\n          data-bs-toggle=\"collapse\" data-bs-target=\"#collapseThree\"\r\n          aria-expanded=\"false\" aria-controls=\"collapseThree\"\r\n        > Species </button>\r\n      </h2>\r\n      <div\r\n  id=\"collapseThree\" className=\"accordion-collapse collapse \"\r\n  aria-labelledby=\"headingThree\" data-bs-parent=\"#accordionExample\"\r\n>\r\n<div className=\"accordion-body d-flex flex-wrap gap-3\">\r\n  {species.map((item, index) => (\r\n    <FilterBTN\r\n      key={index}\r\n      index={index}\r\n      name=\"species\"\r\n      task={updateSpecies}\r\n      setPageNumber={setPageNumber}\r\n      input={item}\r\n    />\r\n  ))}\r\n</div>\r\n</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Species\r\n","import React from 'react';\r\nimport FilterBTN from '../filterBTN';\r\n\r\n\r\n\r\nconst Status = ({ updateStatus, setPageNumber }) => {\r\n  let status = [\"Alive\", \"Dead\", \"Unknown\"];\r\n  return (\r\n    <div className=\"accordion-item\">\r\n      <h2 className=\"accordion-header\" id=\"headingOne\">\r\n        <button\r\n          className=\"accordion-button\" type=\"button\"\r\n          data-bs-toggle=\"collapse\" data-bs-target=\"#collapseOne\"\r\n          aria-expanded=\"true\" aria-controls=\"collapseOne\"\r\n        > Status </button>\r\n      </h2>\r\n      <div\r\n  id=\"collapseOne\" className=\"accordion-collapse collapse show\"\r\n  aria-labelledby=\"headingOne\" data-bs-parent=\"#accordionExample\"\r\n>\r\n<div className=\"accordion-body d-flex flex-wrap gap-3\">\r\n  {status.map((item, index) => (\r\n    <FilterBTN\r\n      key={index}\r\n      index={index}\r\n      name=\"status\"\r\n      task={updateStatus}\r\n      setPageNumber={setPageNumber}\r\n      input={item}\r\n    />\r\n  ))}\r\n</div>\r\n</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Status\r\n","import React from 'react';\r\nimport FilterBTN from '../filterBTN';\r\n\r\n\r\n\r\nconst Gender = ({ updateGender, setPageNumber }) => {\r\n    let genders = [\"Female\", \"Male\", \"Genderless\", \"Unknown\"];\r\n        return (\r\n    <div className=\"accordion-item\">\r\n      <h2 className=\"accordion-header\" id=\"headingOne\">\r\n        <button\r\n          className=\"accordion-button collapsed\" type=\"button\"\r\n          data-bs-toggle=\"collapse\" data-bs-target=\"#collapseTwo\"\r\n          aria-expanded=\"false\" aria-controls=\"collapseTwo\"\r\n        > Gender </button>\r\n      </h2>\r\n      <div\r\n  id=\"collapseTwo\" className=\"accordion-collapse collapse \"\r\n  aria-labelledby=\"headingTwo\" data-bs-parent=\"#accordionExample\"\r\n>\r\n<div className=\"accordion-body d-flex flex-wrap gap-3\">\r\n  {genders.map((item, index) => (\r\n    <FilterBTN\r\n      key={index}\r\n      index={index}\r\n      name=\"genders\"\r\n      task={updateGender}\r\n      setPageNumber={setPageNumber}\r\n      input={item}\r\n    />\r\n  ))}\r\n</div>\r\n</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Gender\r\n","import React from 'react';\r\nimport {Typography, Link } from '@mui/material';\r\nimport Species from './category/Species';\r\nimport Status from './category/Status';\r\nimport Gender from './category/Gender';\r\nimport {makeStyles} from '@mui/styles';\r\nimport { Box } from '@mui/system';\r\n\r\n\r\nconst Filters = ({  updateStatus,  updateGender,  updateSpecies,   setPageNumber}) => {\r\n\r\n    let clear = () => {\r\n        updateStatus(\"\");\r\n        updateGender(\"\");\r\n        updateSpecies(\"\");\r\n        setPageNumber(1);\r\n        window.location.reload(false);\r\n      };\r\n\r\n      const useStyles = makeStyles(theme => ({\r\n        clearButton: {\r\n            cursor: 'pointer',\r\n        }\r\n      }));\r\n    const classes = useStyles();\r\n\r\n      \r\n    return (\r\n        <Box\r\n        sx={{p:'10px'}} >\r\n            <Typography sx={{textAlign:'center'}} variant=\"h6\">\r\n            Filters\r\n            </Typography>\r\n            <Link sx={{ml: '130px'}}  onClick={clear} className={classes.clearButton}>Clear filters </Link>\r\n            <Status updateStatus={updateStatus} setPageNumber={setPageNumber} />\r\n            <Gender updateGender={updateGender} setPageNumber={setPageNumber} />\r\n            <Species updateSpecies={updateSpecies} setPageNumber={setPageNumber} />\r\n        </Box>\r\n\r\n\r\n    )\r\n}\r\n\r\nexport default Filters\r\n","import React from 'react'\r\nimport {Grid, Card, CardContent, CardMedia, Typography, Button, CardActions } from '@mui/material';\r\nimport {Link} from \"react-router-dom\"\r\n\r\n\r\n\r\nfunction Cards({results, page}) {\r\n    let display;\r\n\r\n\r\n    if (results) {\r\n        display = results.map(x=>{\r\n            let {id, name, image, location,species} = x\r\n            \r\n\r\n           return(<Grid key={id} item md={4}>\r\n                    <Card  sx={{ maxWidth: 300, height: '520px' }}>\r\n                            <CardMedia\r\n                            component=\"img\"\r\n                            height=\"300\"\r\n                            image={image}\r\n                            alt={name}\r\n                            > \r\n                            </CardMedia>\r\n                            <CardContent>\r\n                            <Typography gutterBottom variant=\"h5\" component=\"div\">\r\n                                {name}\r\n                            </Typography>\r\n                            <Typography variant=\"body1\" color=\"text.primary\">\r\n                                Location:\r\n                            </Typography>\r\n                            <Typography variant=\"body2\" color=\"text.primary\">\r\n                                {location.name}\r\n                            </Typography>\r\n                            <Typography variant=\"body3\" color=\"text.secondary\">\r\n                                Species:\r\n                            </Typography>\r\n                            <Typography variant=\"body3\" color=\"text.secondary\">\r\n                                {species}\r\n                            </Typography>\r\n                            </CardContent>\r\n                            <CardActions>\r\n                                <Button component={Link} to = {`${page}/${id}`} size=\"small\" color=\"primary\">\r\n                                More info\r\n                                </Button>\r\n                            </CardActions>\r\n                    </Card>   \r\n                    </Grid>\r\n                    ) \r\n        })\r\n    }\r\n    else {\r\n        display = \"No Characters Found :(\";\r\n    }\r\n\r\n    return (\r\n        <>{display}</>\r\n        \r\n          \r\n    )\r\n}\r\n\r\nexport default Cards\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React, {useState, useEffect} from \"react\";\r\nimport Grid from '@mui/material/Grid';\r\nimport Filters from \"./components/filters/filters\";\r\nimport Cards from \"./components/cards\";\r\nimport MyPagination from \"../../UI/Pagination\";\r\nimport Search from \"../../UI/Search\";\r\n\r\n\r\nfunction Characters() {\r\n\r\n    let [pageNumber, setPageNumber] = useState(1);\r\n    let [search, setSearch] = useState(\"\");\r\n    let [status, updateStatus] = useState(\"\");\r\n    let [gender, updateGender] = useState(\"\");\r\n    let [species, updateSpecies] = useState(\"\");\r\n    let [fetchedData, updateFetchedData] = useState([]);\r\n    let {info, results} = fetchedData;\r\n    let api = `https://rickandmortyapi.com/api/character/?page=${pageNumber}&name=${search}&status=${status}&gender=${gender}&species=${species}`;\r\n  \r\n    \r\n  \r\n  \r\n  \r\n  \r\n    useEffect (()=>{\r\n    \r\n      (async function(){\r\n      let data = await fetch(api).then(res => res.json())\r\n      updateFetchedData(data) \r\n    })()\r\n  \r\n  \r\n    },[api]);\r\n  \r\n    \r\n    return (\r\n        <div>\r\n            <Grid container spacing={2} justifyContent=\"center\"sx={{mt:'55px'}}>\r\n        <Grid item md={12} sx={{display:'flex', justifyContent:'center', alignItems:'center'}}>\r\n        <Search setSearch={setSearch}  />\r\n        </Grid>\r\n        <Grid item md={3} >\r\n        <Filters  sx={{ display: 'flex', flexDirection: 'column'}} \r\n          pageNumber={pageNumber}\r\n          updateStatus={updateStatus}\r\n          updateGender={updateGender}\r\n          updateSpecies={updateSpecies}\r\n          setPageNumber={setPageNumber}\r\n        />\r\n        </Grid>\r\n       \r\n        <Grid  sx={{pr:'10px'}} container item md={9} spacing={2} justifyContent=\"center\"\r\n  alignItems=\"center\">\r\n          <Cards page=\"/home\" results={results} />\r\n        </Grid>\r\n        \r\n        <Grid item md={12}>\r\n          <MyPagination info={info} setPageNumber={setPageNumber} />\r\n        </Grid>\r\n      </Grid>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Characters\r\n","import React from \"react\";\nimport Header from \"./UI/header\";\nimport {BrowserRouter as Router, Routes, Route} from 'react-router-dom';\nimport Episodes from \"./pages/Episodes/Episodes\";\nimport Location from \"./pages/Locations/Location\";\nimport WatchList from \"./pages/WatchList/WatchList\";\nimport CardDetails from \"./pages/Characters/components/CardDetails\";\nimport Characters from \"./pages/Characters/Characters\"\n\n\nfunction App() {\n  return (\n    <Router>\n      <div className=\"App\"></div>\n      <Header  />\n      <Routes>\n      <Route exact path=\"/\">\n      </Route> \n        <Route path=\"/home\" element={<Characters />} />\n        <Route path=\"/home/:id\" element={<CardDetails />} />\n\n        <Route path=\"/episodes\" element={<Episodes />} />\n\n        <Route path=\"/locations\" element={<Location />} />\n\n        <Route path=\"/watch-list\" element={<WatchList />} />\n\n\n      </Routes>\n\n    </Router>\n  )\n}\n\n\n\n\n  \n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}